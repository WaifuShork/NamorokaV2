Index: NamorokaV2/NamorokaCore/Modules/InfoModule.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Globalization;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing Discord;\r\nusing Discord.Commands;\r\nusing Discord.WebSocket;\r\nusing NamorokaV2.Attributes;\r\nusing Newtonsoft.Json;\r\n\r\n// ReSharper disable once ClassNeverInstantiated.Global\r\n\r\nnamespace NamorokaV2\r\n{\r\n    public sealed class InfoModule : ModuleBase<SocketCommandContext>\r\n    {\r\n        [Command(\"say\")]\r\n        [Summary(\"Echoes a message.\")]\r\n        public async Task SayAsync([Remainder] [Summary(\"The text to echo\")] string echo)\r\n        {\r\n            switch (echo)\r\n            {\r\n                case \"@everyone\":\r\n                    await ReplyAsync(\"lol no\");\r\n                    break;\r\n                case \"@here\":\r\n                    await ReplyAsync(\"lol no\");\r\n                    break;\r\n                default:\r\n                    await ReplyAsync(echo);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        [Command(\"square\")]\r\n        [Summary(\"Squares a number.\")]\r\n        public async Task SquareAsync([Summary(\"The number to square.\")] string num)\r\n        {\r\n            float value = float.Parse(num, CultureInfo.InvariantCulture.NumberFormat);\r\n            await Context.Channel.SendMessageAsync($\"{value}^2 = {Math.Pow(value, 2)}\");\r\n        }\r\n\r\n        [Command(\"userinfo\")]\r\n        [Summary(\"Returns info about the current user, or the user parameter, if one is passed\")]\r\n        public async Task UserInfoAsync([Summary(\"The (optional)\")] SocketUser user)\r\n        {\r\n            SocketUser userInfo = user ?? Context.Client.CurrentUser;\r\n            if (user != null)\r\n                await ReplyAsync($\"{user.Username}#{userInfo.Discriminator}\");\r\n        }\r\n\r\n        [Command(\"version\")]\r\n        [Alias(\"vers\", \"ver\", \"v\")]\r\n        [Summary(\"Returns the current version of the bot\")]\r\n        public async Task Version()\r\n        {\r\n            await Context.Channel.SendMessageAsync($\"Namoroka v{NamorokaV2.Version.ShortVersion} : Discord.Net v{NamorokaV2.Version.DiscordVersion}\");\r\n        }\r\n\r\n        [Command(\"avatar\")]\r\n        [Summary(\"Gets the users avatar and sends it in the channel\")]\r\n        public async Task Avatar(SocketUser user)\r\n        {\r\n            SocketUser userInfo = user ?? Context.Client.CurrentUser;\r\n            if (user != null)\r\n                await ReplyAsync(userInfo.GetAvatarUrl());\r\n        }\r\n\r\n        [Command(\"bread\")]\r\n        public async Task Bread()\r\n        {\r\n            EmbedBuilder builder = new EmbedBuilder\r\n            {\r\n                Title = \"here's the loaf\",\r\n                ImageUrl = \"https://i.imgur.com/cenSuAk.png\"\r\n            };\r\n\r\n            \r\n            Embed embed = builder.Build();\r\n            \r\n            await Context.Channel.SendMessageAsync(null, false, embed);\r\n        }\r\n\r\n        [RequireRole(RoleIds.Administrator)]\r\n        [Command(\"prefix\")]\r\n        public async Task PrefixAsync(string prefix)\r\n        {\r\n            string json = await File.ReadAllTextAsync(JsonService._configJson);\r\n            dynamic jsonObj = JsonConvert.DeserializeObject(json);\r\n            jsonObj[\"prefix\"] = prefix;\r\n            string output = JsonConvert.SerializeObject(jsonObj, Formatting.Indented);\r\n            await File.WriteAllTextAsync(JsonService._configJson, output);\r\n            \r\n            await Context.Channel.SendMessageAsync($\"I changed your prefix to: {prefix}\");\r\n        }\r\n    }\r\n}  
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- a/NamorokaV2/NamorokaCore/Modules/InfoModule.cs	(revision 604a350f1a943991babfd9df716bd6388d39ece7)
+++ b/NamorokaV2/NamorokaCore/Modules/InfoModule.cs	(date 1604555582450)
@@ -61,9 +61,9 @@
 
         [Command("avatar")]
         [Summary("Gets the users avatar and sends it in the channel")]
-        public async Task Avatar(SocketUser user)
+        public async Task Avatar(IUser user)
         {
-            SocketUser userInfo = user ?? Context.Client.CurrentUser;
+            IUser userInfo = user ?? Context.Client.CurrentUser;
             if (user != null)
                 await ReplyAsync(userInfo.GetAvatarUrl());
         }
